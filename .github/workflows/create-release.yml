name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

env:
  JAR_NAME_TEMPLATE: telegram-dynamic-profile-photo-*-jar-with-dependencies.jar
  TAG: v${{ github.event.inputs.version }}
  REMOTE_DIR: /telegram-dynamic-profile-photo
  DEEZER_LOGIN_CMD: deezer_login.sh
  TELEGRAM_LOGIN_CMD: telegram_login.sh
  TELEGRAM_LOGOUT_CMD: telegram_logout.sh
  TELEGRAM_UPDATE_PHOTO_CMD: telegram_update_photo.sh

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Set JAR_NAME_TEMPLATE
        run: |
          echo "JAR_NAME=${{ env.JAR_NAME_TEMPLATE }}" | sed "s/*/${{ github.event.inputs.version }}/g" >> $GITHUB_ENV
      - name: Set JAR_PATH
        run: |
          echo "JAR_PATH=target/${{ env.JAR_NAME }}" >> $GITHUB_ENV
      - name: Show env variables
        run: |
          echo "JAR_NAME_TEMPLATE=${{ env.JAR_NAME_TEMPLATE }}"
          echo "JAR_NAME=${{ env.JAR_NAME }}"
          echo "JAR_PATH=${{ env.JAR_PATH }}"
          echo "TAG=${{ env.TAG }}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn package
      - name: Upload artifact to remote
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          pass: ${{ secrets.REMOTE_PASS }}
          port: ${{ secrets.REMOTE_PORT }}
          first_ssh: |
            cd ${{ env.REMOTE_DIR }}
            > ${{ env.DEEZER_LOGIN_CMD }}
            > ${{ env.TELEGRAM_LOGIN_CMD }}
            > ${{ env.TELEGRAM_LOGOUT_CMD }}
            > ${{ env.TELEGRAM_UPDATE_PHOTO_CMD }}
            rm -rf ${{ env.JAR_NAME_TEMPLATE }}
          scp: |
            ${{ env.JAR_PATH }} => ${{ env.REMOTE_DIR }}
          last_ssh: |
            cd ${{ env.REMOTE_DIR }}
            echo "java -jar ${{ env.JAR_NAME }} deezer.login" >> ${{ env.DEEZER_LOGIN_CMD }}
            echo "java -jar ${{ env.JAR_NAME }} telegram.login" >> ${{ env.TELEGRAM_LOGIN_CMD }}
            echo "java -jar ${{ env.JAR_NAME }} telegram.logout" >> ${{ env.TELEGRAM_LOGOUT_CMD }}
            echo -e "cd ${{ env.REMOTE_DIR }}\njava -jar ${{ env.JAR_NAME }} telegram.update_photo" >> ${{ env.TELEGRAM_UPDATE_PHOTO_CMD }}
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.TAG }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          draft: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: ${{ env.JAR_NAME }}
          asset_content_type: application/java-archive